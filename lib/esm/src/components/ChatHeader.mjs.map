{"version":3,"file":"ChatHeader.mjs","sources":["../../../../src/components/ChatHeader.tsx"],"sourcesContent":["import { useChatActions } from \"@yext/chat-headless-react\";\nimport { DualSyncIcon } from \"../icons/DualSync\";\nimport { useComposedCssClasses } from \"../hooks/useComposedCssClasses\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { CrossIcon } from \"../icons/Cross\";\nimport { withStylelessCssClasses } from \"../utils/withStylelessCssClasses\";\n\n/**\n * The CSS class interface for the {@link ChatHeader} component.\n *\n * @public\n */\nexport interface ChatHeaderCssClasses {\n  container?: string;\n  title?: string;\n  restartButton?: string;\n  restartButtonIcon?: string;\n  closeButton?: string;\n  closeButtonIcon?: string;\n}\n\nconst builtInCssClasses: Readonly<ChatHeaderCssClasses> =\n  withStylelessCssClasses(\"Header\", {\n    container:\n      \"w-full pl-4 pr-3 py-3 flex justify-between bg-gradient-to-tr from-blue-600 to-blue-800\",\n    title: \"text-white text-xl font-medium truncate pr-1\",\n    restartButton: \"w-8 h-8 ml-auto shrink-0 flex justify-center items-center\",\n    restartButtonIcon: \"text-white stroke-[0.2] w-[26px] h-[26px]\",\n    closeButton:\n      \"w-8 h-8 hover:scale-110 shrink-0 flex justify-center items-center\",\n    closeButtonIcon: \"text-white w-[26px] h-[26px]\",\n  });\n\n/**\n * The props for the {@link ChatHeader} component.\n *\n * @public\n */\nexport interface ChatHeaderProps {\n  /**\n   * The headers's title text, essentially how the chat window identifies itself to the user.\n   */\n  title: string;\n  /**\n   * Displays a restart button which allows the user to restart the conversation.\n   * Defaults to false.\n   */\n  showRestartButton?: boolean;\n  /**\n   * Displays a close button which will invoke {@link ChatHeaderProps.onClose} on click.\n   * Default to false.\n   */\n  showCloseButton?: boolean;\n  /** A function which is called when the close button is clicked.  */\n  onClose?: () => void;\n  /**  Custom icon for for restart button. */\n  restartButtonIcon?: JSX.Element;\n  /**  Custom icon for for close button. */\n  closeButtonIcon?: JSX.Element;\n  /**  CSS classes for customizing the component styling. */\n  customCssClasses?: ChatHeaderCssClasses;\n}\n\n/**\n * A component that renders the header of a chat bot panel,\n * including the title and a button to reset the conversation.\n *\n * @public\n *\n * @param props - {@link ChatHeaderProps}\n */\nexport function ChatHeader({\n  title,\n  showRestartButton,\n  restartButtonIcon,\n  showCloseButton,\n  closeButtonIcon,\n  onClose,\n  customCssClasses,\n}: ChatHeaderProps) {\n  const chat = useChatActions();\n\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n\n  const [isSpinning, setIsSpinning] = useState(false);\n  const restartButtonCssClasses = twMerge(\n    cssClasses.restartButton,\n    isSpinning ? \"animate-[spin_0.3s_linear]\" : \"hover:scale-110\"\n  );\n\n  const clearTimerRef = useRef<ReturnType<typeof setTimeout>>();\n  const onRestart = useCallback(async () => {\n    clearTimeout(clearTimerRef.current);\n    setIsSpinning(true);\n    clearTimerRef.current = setTimeout(() => {\n      setIsSpinning(false);\n    }, 1000);\n    chat.restartConversation();\n  }, [chat]);\n\n  return (\n    <div className={cssClasses.container}>\n      <h1 className={cssClasses.title}>{title}</h1>\n      {showRestartButton && (\n        <button\n          aria-label=\"Restart Conversation\"\n          onClick={onRestart}\n          className={restartButtonCssClasses}\n        >\n          {restartButtonIcon ?? (\n            <DualSyncIcon className={cssClasses.restartButtonIcon} />\n          )}\n        </button>\n      )}\n      {showCloseButton && (\n        <button\n          aria-label=\"Close Chat\"\n          onClick={onClose}\n          className={cssClasses.closeButton}\n        >\n          {closeButtonIcon ?? (\n            <CrossIcon className={cssClasses.closeButtonIcon} />\n          )}\n        </button>\n      )}\n    </div>\n  );\n}\n"],"names":["_jsxs","_jsx"],"mappings":";;;;;;;;;AAsBA,MAAM,iBAAiB,GACrB,uBAAuB,CAAC,QAAQ,EAAE;AAChC,IAAA,SAAS,EACP,wFAAwF;AAC1F,IAAA,KAAK,EAAE,8CAA8C;AACrD,IAAA,aAAa,EAAE,2DAA2D;AAC1E,IAAA,iBAAiB,EAAE,2CAA2C;AAC9D,IAAA,WAAW,EACT,mEAAmE;AACrE,IAAA,eAAe,EAAE,8BAA8B;AAChD,CAAA,CAAC,CAAC;AAgCL;;;;;;;AAOG;SACa,UAAU,CAAC,EACzB,KAAK,EACL,iBAAiB,EACjB,iBAAiB,EACjB,eAAe,EACf,eAAe,EACf,OAAO,EACP,gBAAgB,GACA,EAAA;AAChB,IAAA,MAAM,IAAI,GAAG,cAAc,EAAE,CAAC;IAE9B,MAAM,UAAU,GAAG,qBAAqB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;IAE9E,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpD,IAAA,MAAM,uBAAuB,GAAG,OAAO,CACrC,UAAU,CAAC,aAAa,EACxB,UAAU,GAAG,4BAA4B,GAAG,iBAAiB,CAC9D,CAAC;AAEF,IAAA,MAAM,aAAa,GAAG,MAAM,EAAiC,CAAC;AAC9D,IAAA,MAAM,SAAS,GAAG,WAAW,CAAC,YAAW;AACvC,QAAA,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACpC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpB,QAAA,aAAa,CAAC,OAAO,GAAG,UAAU,CAAC,MAAK;YACtC,aAAa,CAAC,KAAK,CAAC,CAAC;SACtB,EAAE,IAAI,CAAC,CAAC;QACT,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC7B,KAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAEX,IAAA,QACEA,IAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAE,UAAU,CAAC,SAAS,EAAA,QAAA,EAAA,CAClCC,GAAI,CAAA,IAAA,EAAA,EAAA,SAAS,EAAE,UAAU,CAAC,KAAK,EAAG,QAAA,EAAA,KAAK,GAAM,EAC5C,iBAAiB,KAChBA,8BACa,sBAAsB,EACjC,OAAO,EAAE,SAAS,EAClB,SAAS,EAAE,uBAAuB,YAEjC,iBAAiB,KAChBA,GAAC,CAAA,YAAY,IAAC,SAAS,EAAE,UAAU,CAAC,iBAAiB,EAAI,CAAA,CAC1D,EACM,CAAA,CACV,EACA,eAAe,KACdA,GAAA,CAAA,QAAA,EAAA,EAAA,YAAA,EACa,YAAY,EACvB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,UAAU,CAAC,WAAW,YAEhC,eAAe,KACdA,GAAC,CAAA,SAAS,IAAC,SAAS,EAAE,UAAU,CAAC,eAAe,EAAI,CAAA,CACrD,GACM,CACV,CAAA,EAAA,CACG,EACN;AACJ;;;;"}